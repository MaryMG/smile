{"version":3,"sources":["styles/StyleComponents.js","components/home/Home.js","services/index.js","context.js","components/Login/LoginContainer.js","components/Signup /SignupPaciente.js","components/SignupPsicologo/SignupPsicologo.js","components/Profile/Profile.js","components/Navbar/Navbar.js","components/Registro/RegistroPacientes.js","Router.js","serviceWorker.js","index.js"],"names":["StyledImage","styled","div","style","background","borderRadius","border","color","height","padding","boxShadow","Home","to","Button","variant","baseURL","service","axios","create","withCredentials","MY_SERVICE","signup","data","a","async","post","trueData","login","getUser","get","logout","getPosts","getRegistro","docId","getDoctors","submitPost","submitRegistro","MyContext","createContext","MyProvider","state","loggedUser","formSignup","loginForm","email","password","registros","user","infoDoctors","handleInput","e","obj","target","name","value","setState","handleSignup","preventDefault","signedUser","Swal","fire","handleSignupDoctor","Object","assign","role","handleLogin","cb","then","catch","err","settingRegistro","_id","console","log","paciente","handleLogout","window","localStorage","clear","document","cookie","this","Provider","settingPosts","props","children","Component","useStyles","makeStyles","theme","root","margin","spacing","width","LoginContainer","classes","Consumer","context","onSubmit","history","push","className","noValidate","autoComplete","TextField","id","label","type","onChange","valuevalue","SignupPaciente","username","age","SignupPsicologo","cedula","required","phone","Profile","posts","singlePost","doctors","prevState","Grid","container","item","xs","sm","title","description","length","map","i","Card","key","CardActions","size","contextType","flexGrow","menuButton","marginRight","ButtonAppBar","AppBar","position","Toolbar","Typography","onClick","RegistroPacientes","singleRegistro","componentDidMount","papas","tem","registro","Router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4a8b63e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n\nexport const StyledImage = styled.div`\nbackground: url(\"../image/61377.jpg\");\nbackground-position: center center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nwidth: 100vw; \nheight:100vh;\npadding: 5px;\nmargin-top: 0px;\n\n`;\n\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { Link } from \"react-router-dom\";\nimport {StyledImage} from \"../../styles/StyleComponents\"\n\nconst style = {\n  background: ' linear-gradient(120deg, #f6d365 0%, #fda085 100%)',\n  borderRadius: 3,\n  border: 0,\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n};\n\nexport default function Home() {\n  return (\n\n    <div >\n     <StyledImage>\n     \n      <Link to=\"/signup\"><Button style={style} variant=\"contained\" color=\"primary\">Paciente</Button></Link>\n      <Link to=\"/signupsi\"><Button variant=\"contained\" color=\"primary\">Psicologo</Button></Link>\n     \n      </StyledImage>\n      </div>\n    \n  \n    \n  );\n}\n\n\n\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = 'here should be your production endpoint')\n  : (baseURL = 'https://affectionate-euclid-efea3b.netlify.com/api');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst MY_SERVICE = {\n  signup: async data => {\n    try {\n    let trueData = await service.post('/auth/signup', data)\n    return trueData\n    } catch (e) { \n    }\n  },\n\n  login: data => {\n    return service.post('/auth/login', data)\n  },\n\n  getUser: () => {\n    return service.get('/profile')\n  },\n\n  logout: () => {\n    return service.post('/auth/logout')\n  },\n\n  getPosts: () => {\n     return service.get('/post')\n  },\n\n  getRegistro: (docId) => {\n    return service.post('/registro', {docId})\n },\n\n  getDoctors: () => {\n    return service.get('/auth/getDoctors')\n  },\n\n  submitPost: (data) => {\n    \n    return service.post('/post', data)\n  },\n\n  submitRegistro: (data) => {\n   \n    return service.post('/setregistro', data)\n\n  }\n  \n};\n\nexport default MY_SERVICE;\n","import React, { Component, createContext } from \"react\";\nimport MY_SERVICE from \"./services/index\";\nimport Swal from \"sweetalert2\";\n\nexport const MyContext = createContext();\n\nclass MyProvider extends Component {\n  state = {\n    loggedUser: false,\n    formSignup: {},\n    loginForm: {\n      email: \"\",\n      password: \"\"\n    },\n    registros:[],\n    user: {},\n    infoDoctors:{}\n  };\n  \n  componentDidMount() {\n    \n    if (document.cookie) {\n      MY_SERVICE.getUser()\n        .then(({ data }) => {\n          this.setState({ loggedUser: true, user: data.user });\n          Swal.fire(`Welcome back ${data.user.name} `, \"\", \"success\");\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  handleInput = (e, obj) => {\n    const a = this.state[obj];\n    const key = e.target.name;\n    a[key] = e.target.value;\n    this.setState({ obj: a });\n    \n  };\n \n  handleSignup = async e => {\n    e.preventDefault();\n    let signedUser = await MY_SERVICE.signup(this.state.formSignup)\n    if (signedUser) {\n      return signedUser\n    }\n    Swal.fire(`Welcome ${this.state.formSignup.name}`, \"User created\", \"success\")\n  };\n\n  handleSignupDoctor = async e => {\n    e.preventDefault();\n    let signedUser = await MY_SERVICE.signup(Object.assign({role: 'Doctor'}, this.state.formSignup))\n    if (signedUser) {\n      return signedUser\n    }\n    Swal.fire(`Welcome ${this.state.formSignup.name}`, \"User created\", \"success\")\n  };\n\n  handleLogin = (e, cb) => {\n    e.preventDefault();\n    MY_SERVICE.login(this.state.loginForm)\n    .then(({ data }) => {\n      this.setState({ loggedUser: true, user: data.user })\n      cb()\n    })\n    .catch(err => {\n      Swal.fire('email o contraseña incorrecta')\n    });\n  };\n  settingRegistro = async () => {\n    //console\n      const {data} = await MY_SERVICE.getRegistro(this.state.user._id)\n      console.log(data)\n      this.setState({registros: data.paciente})\n    }\n\n  handleLogout = async cb => {\n    await MY_SERVICE.logout();\n    window.localStorage.clear();\n    this.setState({ loggedUser: false, user: {} });\n    cb();\n    this.state.loginForm.email = ''\n    \n  };\n\n  render() {\n    console.log(this.state.registros)\n    return (\n      <MyContext.Provider\n        value={{\n          loggedUser: this.state.loggedUser,\n          formSignup: this.state.formSignup,\n          loginForm: this.state.loginForm,\n          handleInput: this.handleInput,\n          handleSignup: this.handleSignup,\n          handleSignupDoctor: this.handleSignupDoctor,\n          handleLogin: this.handleLogin,\n          handleLogout: this.handleLogout,\n          // user: this.state.user,\n          state: this.state,\n          settingPosts: this.settingPosts,\n          registros: this.state.registros,\n          settingRegistro: this.settingRegistro\n        \n        }}\n      >\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default MyProvider;\n","import React from 'react';\nimport {MyContext} from \"../../context\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function LoginContainer (props) {\n  const classes = useStyles();\n\n  /*componentDidMount(){\n    if (context.loggedUser) {\n      return props.history.push('/profile')\n    }\n  } */\n     return (\n    <MyContext.Consumer>\n      {context =>(\n         <form onSubmit = {e =>{\n           context.handleLogin(e, () =>{\n            props.history.push('/profile')\n           })\n        }} className={classes.root} noValidate autoComplete=\"off\">\n\n      <TextField \n      id=\"email\"\n      label=\"Correo\" \n      variant=\"outlined\" \n      autoComplete= \"email\"\n      type=\"email\" \n      name=\"email\"\n      value={context.loginForm.email}\n      onChange={e => context.handleInput(e, 'loginForm')}\n      />\n      <TextField\n          id=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          name=\"password\"\n          valuevalue={context.loginForm.password}\n          onChange={e => context.handleInput(e, 'loginForm')}\n        />\n        <Button type='submit' variant=\"contained\" color=\"primary\">LOGIN</Button>\n    </form>\n    )}\n    </MyContext.Consumer> \n   )\n  \n}\n\n","import React from 'react';\nimport {MyContext} from \"../../context\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function SignupPaciente(props) {\n  const classes = useStyles();\n  return (\n    <MyContext.Consumer>\n      {context =>(\n    <form onSubmit={ e => {\n      context.handleSignup(e)\n      props.history.push('/login')\n    }} className={classes.root} noValidate autoComplete=\"off\" >\n\n      <TextField \n      id=\"username\" \n      label=\"Nombre Completo\" \n      variant=\"outlined\" \n      type=\"text\"\n      name=\"username\" \n      value = {context.formSignup.username}\n      onChange={e => context.handleInput(e,\"formSignup\")}\n       />\n      <TextField\n       id=\"age\"\n      label=\"Edad\" \n      variant=\"outlined\"\n      type=\"Number\"\n      name=\"age\"\n      value = {context.formSignup.age}\n      onChange={e => context.handleInput(e,\"formSignup\")}\n       />\n      <TextField \n      id=\"email\" \n      label=\"Correo\" \n      variant=\"outlined\"\n      autoComplete= \"email\"\n      type=\"email\" \n      name=\"email\"\n      value = {context.formSignup.email}\n      onChange={e => context.handleInput(e,\"formSignup\")}\n\n      />\n      <TextField\n          id=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          name=\"password\"\n          onChange={e => context.handleInput(e, \"formSignup\")}\n          value={context.formSignup.password}\n        />\n        \n        <Button type='submit' variant=\"contained\" color=\"primary\">Crear Cuenta</Button>\n     \n    </form>\n    )}\n    </MyContext.Consumer>\n  );\n}\n","import React from 'react';\nimport {MyContext} from \"../../context\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function SignupPsicologo(props) {\n  const classes = useStyles();\n\n  return (\n    <MyContext.Consumer>\n      {context => (\n    <form onSubmit={ e => {\n      context.handleSignupDoctor(e)\n      props.history.push('/login')\n    }}className={classes.root} noValidate autoComplete=\"off\">\n\n      <TextField \n       id=\"username\" \n       label=\"Nombre Completo\" \n       variant=\"outlined\" \n       type=\"text\"\n       name=\"username\"\n       value = {context.formSignup.username}\n       onChange={e => context.handleInput(e,\"formSignup\")}\n      />\n      <TextField\n       id=\"email\" \n       label=\"Correo\" \n       variant=\"outlined\"\n       autoComplete= \"email\" \n       type=\"email\"\n       name=\"email\"\n       value = {context.formSignup.email}\n       onChange={e => context.handleInput(e,\"formSignup\")}\n        />\n      <TextField\n       id=\"cedula\"\n       label=\"Cédula Profesional\" \n       variant=\"outlined\" \n       type=\"text\"\n       name=\"cedula\"\n       value = {context.formSignup.cedula}\n       onChange={e => context.handleInput(e,\"formSignup\")}\n       required/>\n      <TextField \n       id=\"phone\"\n       label=\"Celular\"\n       variant=\"outlined\"\n       type=\"Number\"\n       name=\"phone\"\n       value = {context.formSignup.phone}\n       onChange={e => context.handleInput(e,\"formSignup\")}\n       required\n       />\n      <TextField\n          id=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          name=\"password\"\n          onChange={e => context.handleInput(e, \"formSignup\")}\n          value={context.formSignup.password}\n        />\n        <Button type='submit' variant=\"contained\" color=\"primary\">Crear Cuenta</Button>\n    </form>\n     )}\n    </MyContext.Consumer>\n   \n  );\n}","import React, {Component} from 'react';\n//import styled from \"styled-components\";\nimport {MyContext} from \"../../context\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport MY_SERVICE from '../../services/index';\n\nexport default class Profile extends Component {\n\n  state = {\n    posts:[],\n    singlePost: {},\n    doctors: []\n  }\n\ncomponentDidMount() {\n  this.settingPosts() \n}\n\nsettingPosts = async () => {\n  const posts = await MY_SERVICE.getPosts()\n  const doctors = await MY_SERVICE.getDoctors()\n  this.setState({posts: posts.data.post, doctors: doctors.data.doctors})\n}\n\nsubmitPost = async (e) => {\n  e.preventDefault()\n  const {data: post} = await MY_SERVICE.submitPost(this.state.singlePost)\n  this.setState(prevState => ({\n    ...prevState,\n    posts: [post, ...prevState.posts ]\n  }))\n}\n\nhandleInput = (e, obj) => {\n  const a = this.state[obj];\n  const key = e.target.name;\n  a[key] = e.target.value;\n  this.setState({ obj: a })\n};\n\n\n\nrender() {\n  const {posts} = this.state\n  \n    return (\n        <MyContext.Consumer>\n            {context => (\n                      <Grid container >\n                          <Grid item xs={12} sm={3}>\n                            {\n                              (() => {\n                                switch (context.state.user.role) {\n                                  case \"Doctor\":   \n                                   return (\n                                  <>\n                                  <div>\n                                    <h2>Perfil</h2>\n                                  <h3>Nombre:{context.state.user.username}</h3>\n                                  <h3 >Cédula Profesional:{context.state.user.cedula}</h3>\n                                  <h3>Télefono:{context.state.user.phone}</h3>\n                                  <h3>Especialidad:{context.state.user.username}</h3>\n                                  </div>\n                                  \n                                  <div>\n                                  \n                                  <Button variant=\"contained\" color=\"primary\">Registro de Pacientes</Button>\n                                    \n                                  </div>\n                                  </>\n                                  );\n                                  case \"Paciente\": return (\n                                  <>\n                                  <h2>Perfil</h2>\n                                  <h3>Nombre:{context.state.user.username}</h3>\n                                  <h3 >Edad:{context.state.user.age}</h3> \n                                  \n                                  </>\n                                  );\n                                }\n                              })()\n                            }\n                          </Grid>   \n                          <Grid item xs={12} sm={3}>\n                             {\n                              (() => {\n                                switch (context.state.user.role) {\n                                  case \"Doctor\":   \n                                    return (\n                                      <>\n                                      <h1>Crear Post</h1>\n                                        <div>\n                                          <form onSubmit={e => {\n                                            this.submitPost(e); \n                                              this.props.history.push('/profile')\n                                            }}>\n                                              <TextField \n                                                id=\"title\" \n                                                label=\"Título\" \n                                                variant=\"outlined\" \n                                                type=\"text\"\n                                                name=\"title\" \n                                                onChange={e => this.handleInput(e, \"singlePost\")}\n                                                value={this.state.posts.title}\n                                                />\n                                              <TextField\n                                              id=\"description\"\n                                              label=\"Descripción\" \n                                              variant=\"outlined\"\n                                              type=\"text\"\n                                              name=\"description\"\n                                              onChange={e => this.handleInput(e, \"singlePost\")}\n                                              value={this.state.posts.description}\n                                              />\n                                              <Button \n                                              variant=\"contained\"\n                                              color=\"primary\"\n                                              type='submit'\n                                              >Publicar\n                                              </Button>\n                                          </form>\n                                        </div>\n                                  </>\n                                  );\n                                  case \"Paciente\": return (\n                                  <>\n                                   <h2>Post</h2>\n                                   {posts.length > 0 ? (\n                                      posts.map((post,i) => {\n                                        return ( \n                                        <Card key={i}>\n                                          <h2>{post.title}</h2>\n                                          <p>{post.description}</p>\n                                        </Card> \n                                        )\n\n                                      })\n                                    ): (<div>Loading...</div>)\n                                  }\n                                   \n                                  </>\n                                  );\n                                }\n                              })()\n                            }\n                          </Grid>\n\n                          <Grid item xs={12} sm={3}>\n                           {\n                              (() => {\n                                switch (context.state.user.role) {\n                                  case \"Doctor\":   \n                                   return (\n                                  <> \n                                  {posts.length > 0 ? (\n                                      posts.map((post,i) => {\n                                        return ( \n                                        <Card key={i}>\n                                          <h2>{post.title}</h2>\n                                          <p>{post.description}</p>\n                                            <CardActions>\n                                              <Button size=\"small\">Actualizar</Button>\n                                              <Button size=\"small\">Eliminar</Button>\n                                            </CardActions>\n                                        </Card> \n                                        )\n                                      })\n                                    ): (<div>Loading...</div>)\n                                  }\n                                  </>\n                                  );\n                                  case \"Paciente\": return (  \n                                  <>\n                                  <h2>Doctores</h2>\n                                  { this.state.doctors.map ((doctors, i) => {\n                                    return(<Card key={i}> \n                                    <h3>Nombre:<p>{doctors.username}</p></h3>\n                                    <h3>Cédula Profesional:<p>{doctors.cedula}</p></h3>\n                                    <h3>Cel.<p>{doctors.phone}</p></h3>\n                                    </Card>\n                                    )})  \n                                  }\n                                  </>);\n                                }\n                              })()\n                            }\n                          </Grid>\n                      </Grid>\n            )}\n        </MyContext.Consumer>\n    );\n  }\n}\n\n\nProfile.contextType = MyContext","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport {MyContext} from \"../../context\"\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <MyContext.Consumer> \n      {context =>{\n        return (\n        <div className={classes.root}>\n          <AppBar position=\"static\" >\n            <Toolbar>\n              <Typography variant=\"h5\" className={classes.title}>\n                <Link to=\"/\">Smile</Link>   \n              </Typography>\n              {context.state.user.role === 'Doctor' && (\n                <Link to=\"/registro\">Registro Pacientes</Link>\n              )}\n              {context.loggedUser && (\n                <Link to=\"/profile\">Perfil</Link> \n              )}\n\n              {context.loggedUser && (\n                <Link to=\"/\">\n                <Button \n                onClick = {() => \n                  context.handleLogout(() => { \n                  })\n                }\n                >LogOut\n                </Button>\n                </Link>\n               \n              )}\n               {!context.loggedUser && (\n               <Link to=\"/login\">\n                 <Button variant=\"contained\" color=\"primary\">\n                   Login</Button>\n                   </Link>\n              \n               \n              )}\n            </Toolbar>\n          </AppBar>\n        </div>\n        )\n      }}\n   \n    </MyContext.Consumer>\n  );\n}\n\n\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport MY_SERVICE from '../../services/index';\nimport { MyContext } from '../../context';\n\n\nexport default class RegistroPacientes extends Component {\n\n  state = {\n    singleRegistro: {\n      title: '',\n      name: '',\n      description:''\n    },\n    registros: []\n   \n\n  }\n  componentDidMount =  async () => {\n    const papas = await this.context.settingRegistro()\n    this.setState({registros:papas})\n  }\n  // settingRegistro = async () => {\n  //   const registros = await MY_SERVICE.getRegistro()\n  //   console.log(registros)\n  //   this.setState({registros: registros.data.registro})\n  // }\n\n  submitRegistro = async (e) => {\n    e.preventDefault()\n    const {data: singleRegistro} = \n    await MY_SERVICE.submitRegistro(this.state.singleRegistro)\n    this.setState(prevState => ({\n      ...prevState,\n      registros: [singleRegistro, ...this.state.registros]\n    }))\n  }\n\n  handleInput = (e, obj) => {\n    const a = this.state[obj];\n    const key = e.target.name;\n    a[key] = e.target.value;\n    this.setState({ obj: a })\n  };\n\n  \n  render(){\n    return (\n      <MyContext.Consumer>\n        {context=> (\n          <main>\n             <form onSubmit={e  => {\n              this.submitRegistro (e);\n              this.props.history.push('/registro')\n              }}>\n          \n              <Grid tem xs={12} sm={6}>\n                <div>\n                <TextField \n                id=\"title\" \n                label=\"Título\" \n                variant=\"outlined\" \n                type=\"text\"\n                name=\"title\" \n                onChange ={e => this.handleInput(e, \"singleRegistro\")}\n                value= {this.state.singleRegistro.title}\n                \n                />\n                <TextField\n                id=\"name\"\n                label=\"Nombre del Paciente\" \n                variant=\"outlined\"\n                type=\"text\"\n                name=\"name\"\n                onChange ={e => this.handleInput(e, \"singleRegistro\")}\n                value ={this.state.singleRegistro.name}\n                \n                />\n                <TextField\n                id=\"description\"\n                label=\"Descripción\" \n                variant=\"outlined\"\n                type=\"text\"\n                name=\"description\"\n                onChange = {e => this.handleInput (e, \"singleRegistro\")}\n                \n                />\n                <Button \n                variant=\"contained\"\n                color=\"primary\"\n                type='submit'\n                >Registrar\n                </Button>\n              </div> \n            </Grid> \n            \n           \n            </form>  \n            <Grid>\n              <Grid tem xs={12} sm={6}>\n                \n                  <h2>Pacientes</h2>\n                  {context.registros.map((registro, i) =>(\n                      <Card key={i}>\n                        <h3>Problema:{registro.title}</h3>\n                        <h3 >Nombre del Pasiente{registro.name}</h3>\n                        <h3>Descripción:{registro.description}</h3>\n                      </Card>\n                    ))}\n                \n              </Grid>\n            </Grid>   \n          </main>\n      )}\n      </MyContext.Consumer>\n  \n    )\n  }\n}\n\nRegistroPacientes.contextType = MyContext","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './components/home/Home';\n//import NotFound from './components/404/NotFound.js';\nimport LoginContainer from './components/Login/LoginContainer';\nimport SignupPaciente from './components/Signup /SignupPaciente';\nimport SignupPsicologo from './components/SignupPsicologo/SignupPsicologo';\nimport Profile from './components/Profile/Profile';\nimport ButtonAppBar from './components/Navbar/Navbar';\nimport RegistroPacientes from './components/Registro/RegistroPacientes';\n\n\nconst Router = () => (\n  <BrowserRouter>\n   <ButtonAppBar/>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/signup\" component={SignupPaciente} />\n      <Route exact path=\"/signupsi\" component={SignupPsicologo} />\n      <Route exact path=\"/login\" component={LoginContainer} />\n      <Route exact path=\"/profile\" component={Profile} />\n      <Route exact path=\"/registro\" component={RegistroPacientes} /> \n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport MyProvider from './context'\n\n\nReactDOM.render(\n    <MyProvider>\n        <Router/>\n    </MyProvider>,\n   \n    document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}